# Sample transformation rules
transformation_rules = [
    ({"NN": "VB"}, "NOUN -> VERB if previous tag is noun"),
    ({"VB": "NN"}, "VERB -> NOUN if next tag is noun"),
    # Add more transformation rules as needed
]

def apply_transformation_rules(sentence, initial_tags):
    # Apply transformation rules to improve tagging
    improved_tags = initial_tags[:]
    for i in range(1, len(sentence) - 1):  # Skip first and last word
        current_tag = improved_tags[i]
        previous_tag = improved_tags[i - 1]
        next_tag = improved_tags[i + 1]
        for rule in transformation_rules:
            condition, explanation = rule
            if current_tag in condition and condition[current_tag] == next_tag:
                improved_tags[i] = list(condition.keys())[0]
                print(f"Applied rule: {explanation}")
    return improved_tags

if __name__ == "__main__":
    # Sample sentence and initial tags
    sentence = ["The", "cat", "is", "running", "fast"]
    initial_tags = ["DT", "NN", "VBZ", "VBG", "JJ"]

    print("Initial tagging:", list(zip(sentence, initial_tags)))
    
    # Apply transformation rules
    improved_tags = apply_transformation_rules(sentence, initial_tags)
    
    # Print improved tagging
    print("Improved tagging:", list(zip(sentence, improved_tags)))
